{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "MyDiary",
    "description": "An app that allows users to pen down their thoughts and feelings",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "Entries",
      "description": "API for entries in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Registration successful",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Login user into system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to signin",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/entries/{entry_id}": {
      "parameters": [
        {
          "name": "entry_id",
          "in": "path",
          "required": true,
          "description": "ID of entry that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Entry"
        ],
        "summary": "Get entry with given ID",
        "responses": {
          "200": {
            "description": "Entry is found",
            "schema": {
              "$ref": "#/definitions/Entry"
            }
          }
        }
      },
      "put": {
        "summary": "Update entry with give ID",
        "tags": [
          "Entry"
        ],
        "parameters": [
          {
            "name": "entry_id",
            "in": "body",
            "description": "Entry with new values of properties",
            "schema": {
              "properties": {
                "entry_title": {
                  "type": "string"
                },
                "entry_content": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "username",
        "email",
        "password"
      ],
      "properties": {
        "user_id": {
          "type": "string",
          "uniqueItems": true
        },
        "username": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string",
          "uniqueItems": true
        },
        "create_at": {
          "type": "string"
        }
      }
    },
    "Entry": {
      "required": [
        "entry_title",
        "entry_content"
      ],
      "properties": {
        "user_id": {
          "type": "string",
          "uniqueItems": true
        },
        "entry_title": {
          "type": "string"
        },
        "entry_content": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "create_at": {
          "type": "string"
        }
      }
    }
  }
}
